<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Software on The Dyer Laboratory</title>
    <link>http://dyerlab/categories/software/index.xml</link>
    <description>Recent content in Software on The Dyer Laboratory</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <atom:link href="http://dyerlab/categories/software/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Intalling Shiny Server on Ubuntu 14 LTS</title>
      <link>http://dyerlab/2016/06/intalling-shiny-server-on-ubuntu-14-lts/</link>
      <pubDate>Sun, 05 Jun 2016 00:00:00 +0000</pubDate>
      
      <guid>http://dyerlab/2016/06/intalling-shiny-server-on-ubuntu-14-lts/</guid>
      <description>&lt;p&gt;OK, so I just &amp;lsquo;
&lt;a href=&#34;http://shiny.rstudio.com&#34;&gt;found&lt;/a&gt;&amp;rsquo; shiny and it has a lot of cool stuff to it.  OK, I&amp;rsquo;ve known about it for a long time but have just had the opportunity to sit down and work it out and see how it can fit into the presentation and learning I&amp;rsquo;m trying to develop in my
&lt;a href=&#34;http://popgen.bio.vcu.edu&#34;&gt;Applied Population Genetics&lt;/a&gt; online textbook.  Here is a brief overview of how I set up the shiny server on my Ubuntu box that is hosting the book (so I can embed more interactivity in the display).
more
OK, below are the steps that I&amp;rsquo;m taking to upgrade everything on the box and install the shiny server app and start hosting individual shiny apps.##Updating Background &amp;amp; Installing Necessary Components
First, you should update to the latest releases.  I&amp;rsquo;m running a LTS version (long-term support) so it is pretty stark.
sudo apt-get update
sudo apt-get upgrade
Next, I needed to install the following development libraries so that things will go easily.
sudo apt-get install libssl-dev
sudo apt-get install gdebi-core
sudo su - -c &amp;ldquo;R -e \&amp;ldquo;install.packages(&amp;lsquo;devtools&amp;rsquo;, repos=&amp;lsquo;&lt;a href=&#34;http://cran.rstudio.com/&#39;)&amp;quot;&amp;quot;&#34;&gt;http://cran.rstudio.com/&#39;)&amp;quot;&amp;quot;&lt;/a&gt;
And then we can use the
gdebi  framework to install the the server
wget &lt;a href=&#34;https://download3.rstudio.org/ubuntu-12.04/x86_64/shiny-server-1.4.2.786-amd64.deb&#34;&gt;https://download3.rstudio.org/ubuntu-12.04/x86_64/shiny-server-1.4.2.786-amd64.deb&lt;/a&gt;
sudo gdebi shiny-server-1.4.2.786-amd64.deb
This puts the conf file in
/etc/init/shiny-server.conf , sets up the user
shiny  (and has a home directory), and starts the shiny-server process.
##Redirecting URL Requests
At this point the shiny-server is running and is servubg pages on port 3838.  However, I block all ports other than 22 and 80 for security, so what I want to do is to redirect requests to my server asking for anything in the subdirectory
&lt;a href=&#34;http://popgen.bio.vcu.edu/shiny/&#34;&gt;http://popgen.bio.vcu.edu/shiny&lt;/a&gt; to redirect to
&lt;a href=&#34;http://127.0.0.1:3838/&#34;&gt;http://127.0.0.1:3838&lt;/a&gt; locally.  I need to do this by fiddling with the Apache configuration scripts.
Apache on Ubuntu puts configuration scripts in /etc/apache2/sites-available and symliks them to /etc/apache2/sites-enabled.  In this file, I set up a proxy pass so that any url that is asking for stuff in the /shiny/ subdirectory be redirected to the 3838 port on this machine.  At the end of the section for this server, enclosed in
&lt;VirtualHost &lt;i&gt;:80&amp;gt;
, I put the following in:
RewriteCond %{HTTP:Upgrade} =websocket
RewriteRule /shiny/(.&lt;em&gt;) ws://localhost:3838/$1 [P,L]
RewriteCond %{HTTP:Upgrade} !=websocket
RewriteRule /shiny/(.&lt;/em&gt;) &lt;a href=&#34;http://localhost:3838/$1&#34;&gt;http://localhost:3838/$1&lt;/a&gt; [P,L]
ProxyPass /shiny/ &lt;a href=&#34;http://localhost:3838/&#34;&gt;http://localhost:3838/&lt;/a&gt;&lt;br /&gt;
ProxyPassReverse /shiny/ &lt;a href=&#34;http://localhost:3838/&#34;&gt;http://localhost:3838/&lt;/a&gt;
You need to make sure that the following mod are turned on for apache:
*mod_proxy&lt;/p&gt;

&lt;p&gt;*mod_proxy_html&lt;/p&gt;

&lt;p&gt;*mod_proxy_wstunnel
Enable them the way that is appropriate for your server.  On Ubuntu it is:
a2enmod mod_proxy
a2enmod mod_proxy_html
a2enmod mod_proxy_wstunnel
##Restart Apache
All that is left to do now is restart apache and check to see the startup screen for all shiny apps on the
&lt;a href=&#34;http://popgen.bio.vcu.edu/shiny/&#34;&gt;http://popgen.bio.vcu.edu/shiny/&lt;/a&gt; page.
sudo service apache2 restart
The first shiny app to be integrated into the Applied Population Genetics textbook is located in the Hardy-Weinberg chapter.  It is embedded as:
And creates the following widget in the book (go ahead and play with it, it is interactive):
This opens a whole slew of interactive graphics for the textbook!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Volume 0 - On iBooks Store</title>
      <link>http://dyerlab/2016/04/volume-0---on-ibooks-store/</link>
      <pubDate>Fri, 08 Apr 2016 00:00:00 +0000</pubDate>
      
      <guid>http://dyerlab/2016/04/volume-0---on-ibooks-store/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://itunes.apple.com/us/book/applied-population-genetics/id1101353809?ls=1&amp;amp;mt=11&#34;&gt;&lt;img src=&#34;http://dyerlab.bio.vcu.edu/wp-content/uploads/sites/4831/2016/04/Screen-Shot-2016-04-08-at-7.43.40-AM.png&#34; alt=&#34;Screen Shot 2016-04-08 at 7.43.40 AM&#34; /&gt;&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
